#include <stdio.h>
#include <stdlib.h>
#include "life.h"

#include <stdio.h>
#include <stdlib.h>
#include <unistd.h> // For usleep (sleep function)

// Define the grid size
#define ROWS 10
#define COLS 10

// Function to count alive neighbors
int countAliveNeighbors(int grid[ROWS][COLS], int x, int y) {
    int aliveNeighbors = 0;
    for (int i = -1; i <= 1; i++) {
        for (int j = -1; j <= 1; j++) {
            if (i == 0 && j == 0) continue; // Skip the cell itself
            int nx = x + i, ny = y + j;
            if (nx >= 0 && nx < ROWS && ny >= 0 && ny < COLS) {
                aliveNeighbors += grid[nx][ny];
            }
        }
    }
    return aliveNeighbors;
}

void updateGrid(int grid[ROWS][COLS]) {
    int newGrid[ROWS][COLS] = {0};

    for (int i = 0; i < ROWS; i++) {
        for (int j = 0; j < COLS; j++) {
            int aliveNeighbors = countAliveNeighbors(grid, i, j);

            if (grid[i][j] == 1) { // Cell is alive
                if (aliveNeighbors < 2 || aliveNeighbors > 3) {
                    newGrid[i][j] = 0; // Cell dies
                } else {
                    newGrid[i][j] = 1; // Cell stays alive
                }
            } else { // Cell is dead
                if (aliveNeighbors == 3) {
                    newGrid[i][j] = 1; // Cell becomes alive
                }
            }
        }
    }

    // Copy newGrid to grid
    for (int i = 0; i < ROWS; i++) {
        for (int j = 0; j < COLS; j++) {
            grid[i][j] = newGrid[i][j];
        }
    }
}

int evolve() {
    int grid[ROWS][COLS] = {
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 1, 1, 1, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
        {0, 0, 0, 0, 0, 0, 0, 0, 0, 0},
    };

    // Number of iterations
    int iterations = 10;

    // Main loop for running the Game of Life
    for (int i = 0; i < iterations; i++) {
        updateGrid(grid); // Update the grid to the next state
    }

    return 0;
}

